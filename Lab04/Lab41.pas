{Требуется решить уравнение a*x^2+b*x+c. С клавиатуры вводятся коэффиценты a,b,c}
const
  INF_ROOTS=3; 
  
procedure inputVars (var a,b,c:real); //Создаем процедуру inputVars, запрашивающую у пользователя коэффиценты a,b,c
begin
  writeln('a*x^2+b*x+c');
  writeln('Enter the odds on');
  readln(a,b,c);
end;

procedure showroots(nroots:byte; //Данная процедура выводит ответ в зависимости от количества решений квадратного уравнения
                    x1,x2:real); //Переменная nroots хранит количество корней, а 'x1' и 'x2' сами корни  
begin
  case nroots of
    0:writeln('No solution');   //Нет решений, если количество корней равно нулю
    1:writeln('Single solution x= ',x1);  //Одно решение, если количество корней рвно единице и вывод этого корня
    2:writeln('Two solution x1= ',x1, ' and x2= ',x2);//Два решения, если количество корней равно двум и вывод обоих корней
    INF_ROOTS:writeln('Infinite number of solutions');//Если в переменной, после выполнения программы будет тройка, значит бесконечное 
    end;                                              //количество решений
end;

function solveSqrEq (a,b,c:real;      //Ну и сама функция, которая решает заданное уравнение
                     var nroots:byte;
                     var x1,x2:real):byte;
var
  d:real; //В переменной d хранится значение дискриминанта заданного уравнения
begin
  if 0=a then         //Проверяем не ввел ли пользователь ноль в каком либо коэффиценте. Если ввел, то рассматриваем частные случаи
    if 0=b then
      if 0=c then     //Если все коэффиценты равны нулю, то уравнение имеет бесконечное количество решений
        nroots:=INF_ROOTS
      else
        nroots:=0 //Если с<>0, а 'a' и 'b' равны нулю, то нет решений 
    else
      begin
        if 0=c then //Если a=0, c=0, b<>0, то x=0
          begin
            x1:=0;
            nroots:=1;
          end
        else
          begin 
            x1:=-b/c;//Если a=0, b<>0, c<>0, то x=-b/a
            nroots:=1;
          end;
      end
  else    //Остальные случаи можно не рассматривать. Они отлично решаются и через дискриминант
    begin
      d:=b*b-4*a*c;//Находим дискриминант
      if d<0 then  //D<0? Отлично! Значит уравнение не имеет корней.
        nroots:=0
      else
        if d=0 then//Если же D вдруг оказался равным нулю, то будет один корень
          begin
            x1:=-b/2*a;
            nroots:=1;
          end     //Ну если вдруг уравнение прошло все эти дурацкие проверки, то решаем через стандартные формулы
        else
          begin
            x1:=(-b-sqrt(d))/2*a;
            x2:=(-b+sqrt(d))/2*a;
            nroots:=2;
          end;
   end;
   
end; //Закончили писать все процедуры и функции. Переходим к самой программе

var
  a,b,c,x1,x2:real;
  nroots:byte;
begin //Блок программы
  inputVars(a,b,c); //Вызываем процедуру ввода коэффицентов квадратного уравнения
  solveSqrEq(a,b,c,nroots,x1,x2);//Находим корни
  showRoots(nroots,x1,x2);       //И выводим их на экран
end.                             //Вот, собственно, и все